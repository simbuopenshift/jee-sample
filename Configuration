import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;
import org.springframework.core.env.Environment;
import org.springframework.beans.factory.annotation.Value;

@Configuration
public class AppConfig {

    @Autowired
    private Environment environment;

    @Bean
    public YourRecordProperties yourRecordProperties() {
        String selectedPrefix = environment.getProperty("app.selected-prefix");
        return createProperties(selectedPrefix);
    }

    private YourRecordProperties createProperties(String prefix) {
        return switch (prefix) {
            case "client-data" -> createClientDataProperties();
            case "consumer-data" -> createConsumerDataProperties();
            default -> throw new IllegalArgumentException("Invalid prefix: " + prefix);
        };
    }

    private YourRecordProperties createClientDataProperties() {
        return new YourRecordProperties(
            environment.getProperty("client-data.property1"),
            environment.getProperty("client-data.property2"),
            // add the rest of the properties here
        );
    }

    private YourRecordProperties createConsumerDataProperties() {
        return new YourRecordProperties(
            environment.getProperty("consumer-data.property1"),
            environment.getProperty("consumer-data.property2"),
            // add the rest of the properties here
        );
    }

    @Bean
    public PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {
        return new PropertySourcesPlaceholderConfigurer();
    }
}
