That's a complex JSON-to-XML transformation. Here's a BigQuery SQL code that should accomplish this:

```
WITH json_data AS (
  SELECT
    '[{"text": "Data1", "parameter":[{"uom": "in", "value":"32", "altUom":"in", "altValue":"xy"},{"uom": "in", "value":"33", "altUom":"in", "altValue":"aam"}], "qualifierId":"1"}, {"text": "Data2", "parameter": null, "qualifierId":"2"},{"text": "Data3", "parameter":[{"uom": null, "value":"52", "altUom": null, "altValue":null}], "qualifierId":"3"}]' AS json
)
SELECT
  CONCAT(
    '<root>',
    STRING_AGG(
      CONCAT(
        '<Qual id="', JSON_EXTRACT_SCALAR(e, '$.qualifierId'), '">',
        IF(
          JSON_EXTRACT_ARRAY(e, '$.parameter') IS NOT NULL,
          STRING_AGG(
            CONCAT(
              '<param',
              IF(JSON_EXTRACT_SCALAR(p, '$.value') IS NOT NULL, CONCAT(' value="', JSON_EXTRACT_SCALAR(p, '$.value'), '"'), ''),
              IF(JSON_EXTRACT_SCALAR(p, '$.uom') IS NOT NULL, CONCAT(' uom="', JSON_EXTRACT_SCALAR(p, '$.uom'), '"'), ''),
              IF(JSON_EXTRACT_SCALAR(p, '$.altValue') IS NOT NULL, CONCAT(' altValue="', JSON_EXTRACT_SCALAR(p, '$.altValue'), '"'), ''),
              IF(JSON_EXTRACT_SCALAR(p, '$.altUom') IS NOT NULL, CONCAT(' altUom="', JSON_EXTRACT_SCALAR(p, '$.altUom'), '"'), ''),
              '/>'
            ),
            ''
          ),
          ''
        ),
        '<text>', JSON_EXTRACT_SCALAR(e, '$.text'), '</text>',
        '</Qual>'
      ),
      ''
    ),
    '</root>'
  ) AS xml_data
FROM
  json_data,
  UNNEST(JSON_EXTRACT_ARRAY(json, '$')) AS e
LEFT JOIN
  UNNEST(JSON_EXTRACT_ARRAY(e, '$.parameter')) AS p
ON
  TRUE
```

This code uses a combination of `JSON_EXTRACT_SCALAR`, `JSON_EXTRACT_ARRAY`, and `STRING_AGG` functions to transform the JSON data into XML format. The `IF` statements are used to handle null values and avoid including them in the XML output.
