import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

@Mapper
public interface EmployeeMapper {

    EmployeeMapper INSTANCE = Mappers.getMapper(EmployeeMapper.class);

    EmployeeDTO employeeToDTO(Employee entity);

    @Mapping(target = "empdetails", expression = "java(mapToEmployeeDetailsDTO(entity.getEmpdetails()))")
    Employee updateEmployeeFromDTO(EmployeeUpdateRequest request, @MappingTarget Employee entity);

    default EmployeeDetailsDTO mapToEmployeeDetailsDTO(String empdetails) {
        // Deserialize JSON data to EmployeeDetailsDTO
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            return objectMapper.readValue(empdetails, EmployeeDetailsDTO.class);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    default String mapToEmployeeDetailsJson(EmployeeDetailsDTO empdetailsDTO) {
        // Serialize EmployeeDetailsDTO to JSON
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            return objectMapper.writeValueAsString(empdetailsDTO);
        } catch (JsonProcessingException e) {
            e.printStackTrace();
            return null;
        }
    }
}
