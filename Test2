import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
public class ServiceTest {

    @Autowired
    private ConfigProperties configProperties;

    @BeforeEach
    public void setup1() {
        // Setup logic specific to testMethod1
        if (isTestMethod1()) {
            // Setup logic for testMethod1
            System.out.println("Executing setup1 for testMethod1");
        }
    }

    @BeforeEach
    public void setup2() {
        // Setup logic specific to testMethod2
        if (isTestMethod2()) {
            // Setup logic for testMethod2
            System.out.println("Executing setup2 for testMethod2");
        }
    }

    @Test
    public void testMethod1() {
        // Test method 1
    }

    @Test
    public void testMethod2() {
        // Test method 2
    }

    private boolean isTestMethod1() {
        // Add logic to determine if the current test method is testMethod1
        StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace();
        for (StackTraceElement element : stackTraceElements) {
            if (element.getMethodName().equals("testMethod1")) {
                return true;
            }
        }
        return false;
    }

    private boolean isTestMethod2() {
        // Add logic to determine if the current test method is testMethod2
        StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace();
        for (StackTraceElement element : stackTraceElements) {
            if (element.getMethodName().equals("testMethod2")) {
                return true;
            }
        }
        return false;
    }
}
