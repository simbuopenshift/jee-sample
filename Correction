The issue lies in the way you've structured your filter conditions. Currently, all conditions must be true for an element to pass the filter. To skip elements that don't match certain conditions, you should separate the filters.

Here's the refactored code:

```
if (!clientId.equalsIgnoreCase("test")) {
    feedConfigs = feedConfigs.stream()
            .filter(e -> e.getFeedDestination() != null 
                    && e.getFeedMapping() != null 
                    && e.getFeedDestination().getTargetFileType() != null)
            .filter(e -> !e.getFeedDestination().getTargetFileType().equalsIgnoreCase("ACES") 
                    || e.getFeedDestination().getTargetFileFormat().equals(DestinationFileFormat.XML))
            .map(e -> {
                e.getFeedMapping().removeIf(s -> {
                    FeedDefaultMapping defaultMapping = feedDefaultMappingRepository.getFeedDefaultMapping(
                            FeedManagerServiceUtil.getSourceColumnId(s.getSourceColumnIds()), 
                            BigDecimal.valueOf(Double.parseDouble(e.getFeedDestination().getTargetFileVersion())));
                    return (defaultMapping != null 
                            && defaultMapping.getSourceColumnId() != null 
                            && defaultMapping.getSourceColumnId().equals(FeedManagerServiceUtil.getSourceColumnId(s.getSourceColumnIds()))
                            && !Boolean.TRUE.equals(s.getExcludeDefaultMapping()));
                });
                return e;
            })
            .collect(Collectors.toList());
}
```

Changes made:

1. Separated filters for null checks and `ACES` condition.
2. Used `!equals("ACES") || equals(XML)` to include other file types.
3. Kept the `map` operation as is.

This code should now correctly filter out elements that don't match the conditions and include elements with file types other than `ACES`.

*Additional Advice:*

1. Use method references instead of lambdas for readability.
2. Consider using `Optional` to handle potential `NullPointerExceptions`.
3. Break down long lines for better readability.
4. Use constants for magic strings like `"ACES"` and `"XML"`.

*Example Use Case:*

```
// Assuming feedConfigs is a List<FeedConfig>
List<FeedConfig> filteredConfigs = filterFeedConfigs(feedConfigs, clientId);

// ...

private List<FeedConfig> filterFeedConfigs(List<FeedConfig> feedConfigs, String clientId) {
    // The refactored code above
}
```

Let me know if you have further questions!
