Here's an alternative query that uses `STRING_AGG` instead of `GROUP_CONCAT`, which is supported in BigQuery:

```
SELECT 
  CONCAT(
    '<headers>',
    CASE 
      WHEN data IS NOT NULL THEN 
        STRING_AGG(
          CONCAT(
            '<Qual id="', JSON_EXTRACT_SCALAR(input, '$.qualifierId'), '">',
            IF(JSON_EXTRACT(input, '$.parameter') IS NOT NULL,
              STRING_AGG(
                CONCAT(
                  '<param',
                  IFNULL(CONCAT(' value="', JSON_EXTRACT_SCALAR(input, '$.parameter[*].value'), '"'), ''),
                  IFNULL(CONCAT(' uom="', JSON_EXTRACT_SCALAR(input, '$.parameter[*].uom'), '"'), ''),
                  IFNULL(CONCAT(' altValue="', JSON_EXTRACT_SCALAR(input, '$.parameter[*].altValue'), '"'), ''),
                  IFNULL(CONCAT(' altUom="', JSON_EXTRACT_SCALAR(input, '$.parameter[*].altUom'), '"'), ''),
                  '/>'
                ),
                ''
              ),
              ''),
            '<text>', JSON_EXTRACT_SCALAR(input, '$.text'), '</text>',
            '</Qual>'
          ),
          ''
        )
      ELSE ' ' 
    END,
    '</headers>'
  ) AS detail
FROM 
  table;
```

This query uses `STRING_AGG` to concatenate the XML elements, and `IFNULL` to avoid including null values in the XML attributes. Note that I've also replaced the inner `GROUP_CONCAT` with `STRING_AGG`.
