import com.google.cloud.bigquery.*;
import org.springframework.stereotype.Service;
import reactor.core.publisher.Flux;
import java.util.Iterator;

@Service
public class EmployeeService {

    public Flux<Employee> getEmployees() {
        BigQuery bigQuery = BigQueryOptions.getDefaultInstance().getService();

        // Your BigQuery SQL query to select id, name, age from employees table
        String query = "SELECT id, name, age FROM your_project.your_dataset.employees";

        // Configure the query job
        QueryJobConfiguration queryConfig =
            QueryJobConfiguration.newBuilder(query)
                .setUseLegacySql(false)
                .build();

        // Execute the query job and get the result
        TableResult result = bigQuery.query(queryConfig);

        // Map the result to Flux<Employee>
        return Flux.create(fluxSink -> {
            Iterator<FieldValueList> iterator = result.iterateAll().iterator();
            while (iterator.hasNext()) {
                FieldValueList row = iterator.next();
                Employee employee = new Employee(
                    row.get("id").getLongValue(),
                    row.get("name").getStringValue(),
                    (int) row.get("age").getLongValue()
                );
                fluxSink.next(employee);
            }
            fluxSink.complete();
        });
    }
}
