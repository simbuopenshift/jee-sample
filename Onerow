import com.google.cloud.bigquery.*;
import org.springframework.stereotype.Service;

@Service
public class BigQueryService {

    private static final String PROJECT_ID = "your-project-id";
    private static final String DATASET_ID = "your-dataset-id";
    private static final String OTHER_TABLE_ID = "other-table-id";

    public void insertData(List<Map<String, Object>> data) {
        // Existing code to insert data into the main table...
    }

    public void insertSingleRecordPojo(MyPojo pojo) {
        BigQuery bigQuery = BigQueryOptions.getDefaultInstance().getService();

        try {
            // Define the table ID for the other table
            TableId tableId = TableId.of(PROJECT_ID, DATASET_ID, OTHER_TABLE_ID);

            // Map MyPojo fields to BigQuery fields
            InsertAllRequest.RowToInsert rowToInsert = InsertAllRequest.RowToInsert.of(pojo.getId(), pojo.getField1(), pojo.getField2(), ...);
            InsertAllRequest insertRequest = InsertAllRequest.of(tableId, rowToInsert);

            // Insert the row into the other table
            InsertAllResponse response = bigQuery.insertAll(insertRequest);

            // Handle response as needed (check for errors, etc.)
            if (response.hasErrors()) {
                // Handle errors
                for (Map.Entry<Long, List<BigQueryError>> entry : response.getInsertErrors().entrySet()) {
                    System.out.println("Errors for row " + entry.getKey() + ": " + entry.getValue());
                }
            } else {
                System.out.println("Single record inserted successfully into other table.");
            }
        } catch (BigQueryException e) {
            System.out.println("Error inserting single record: " + e.getMessage());
        }
    }
}
